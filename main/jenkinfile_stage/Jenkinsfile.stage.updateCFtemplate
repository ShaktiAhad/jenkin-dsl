#!/usr/bin/env groovy
@Library('pipeline-library') _
TimeZone.setDefault(TimeZone.getTimeZone('UTC'))

def call(region, stack, branchValue){
    if (branchValue != "${env.bucket}"){
        branchName.'ParameterValue' = "${env.bucket}"
        params = new JsonBuilder(cfStackParams).toPrettyString()
        println (awsUpdateCloudformationStack(region, stack, params))
        attempt = 1
        while(awsDescribeStackEvents(region, stack)[0]["ResourceStatus"] != "UPDATE_COMPLETE"){
            println ("-->attempt:${attempt}  CloudFormation Update is in progress.")
            attempt++
            sleep(10)
            if (attempt == 5) {
                println("## [Bad news] Failed to update ClouFormation.\n")
                stack_events = awsDescribeStackEvents(region, stack)
                for (object in stack_events){
                    if (object["Timestamp"] =~ String.format('%tF', java.time.LocalDateTime.now())){
                        println ("timestamp: ${object["Timestamp"]}, ResourceStatus: ${object["ResourceStatus"]}, ResourceStatusReason: ${object["ResourceStatusReason"]}.\n")
                    }
                    if (object["ResourceStatusReason"] == "User Initiated"){
                        break
                    }
                }
                throw new Exception("## [Bad news] Failed to update CloudFormation. Please check the ResourceStatusReason.\n")
            }
        }
    }

    if (awsDescribeStackEvents(region, stack)[0]["ResourceStatus"] == "UPDATE_COMPLETE"){
        println("## [Good news] CF is updated successfully.")
    }
}
return this